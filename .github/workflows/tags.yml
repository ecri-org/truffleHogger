name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: trufflehogger

    steps:
      - uses: actions/checkout@v3
      - name: Setup Vars
        run: |
          echo "BUILD_VERSION=$(cat version)" >> $GITHUB_ENV
          echo "BUILD_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date '+%Y.%m.%d-%T')" >> $GITHUB_ENV
          echo "WHEEL_FILE=$IMAGE_NAME-$(cat version)-py2.py3-none-any.whl" >> $GITHUB_ENV
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/ecri-org/${{ env.IMAGE_NAME }}
          # tag-sha: true
          tag-latest: true
          tag-semver: |
            {{major}}.{{minor}}
            {{major}}.{{minor}}.{{patch}}
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest setuptools wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests
        run: pytest --cov=./ && codecov
      - name: Build
        run: python setup.py sdist bdist_wheel
      - name: Test Install
        run: pip install ./dist/${{ env.WHEEL_FILE }}
      - name: Test Binary
        run: ${{ env.IMAGE_NAME }} -h
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: "BUILD_VERSION=${{ env.BUILD_VERSION }}"
